//file:noinspection GroovyMissingReturnStatement
plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
}

def urls = []
file('mary-voice-urls').eachLine { line ->
    if (!line.startsWith('//')) {
        urls.add line
    }
}

tasks.register('downloadAllVoices') {
    doLast {
        def libDir = file('lib')
        if (!libDir.exists()) {
            libDir.mkdirs()
        }
        if (libDir.list().length == 0) {
            urls.each { url ->
                // Download the file
                def file = new File(libDir, "${url.substring(url.lastIndexOf('/') + 1)}")
                new URL(url as String).withInputStream{ i -> file.withOutputStream{ it << i }}

                // Check if the file is a .jar file or a .zip file
                if (file.name.endsWith('.jar')) {
                    // If it's a .jar file, just copy it to the /lib folder
                    ant.copy(todir: libDir, file: file)
                } else if (file.name.endsWith('.zip')) {
                    // If it's a .zip file, unzip it to the /lib folder
                    ant.unzip(src: file, dest: libDir.getParentFile()) {
                        patternset( ) {
                            include( name: 'lib/' )
                        }
                    }
                    // Delete the .zip file after it's been unzipped
                    file.delete()
                }
            }
        }
    }
}


build.dependsOn downloadAllVoices


group 'org.quad.plex'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()

    exclusiveContent {
        forRepository {
            //noinspection ForeignDelegate
            maven {
                url 'https://mlt.jfrog.io/artifactory/mlt-mvn-releases-local'
            }
        }
        filter {
            includeGroup 'de.dfki.lt.jtok'
        }
    }
}

dependencies {
    implementation group: 'de.dfki.mary', name: 'voice-cmu-slt-hsmm', version: '5.2.1', {
        exclude group: 'com.twmacinta', module: 'fast-md5'
        exclude group: 'gov.nist.math', module: 'Jampack'
    }

    implementation group: 'de.dfki.mary', name: 'marytts-lang-de', version: '5.2.1', {
        exclude group: 'com.twmacinta', module: 'fast-md5'
        exclude group: 'gov.nist.math', module: 'Jampack'
    }

    implementation group: 'de.dfki.mary', name: 'marytts-lang-fr', version: '5.2.1', {
        exclude group: 'com.twmacinta', module: 'fast-md5'
        exclude group: 'gov.nist.math', module: 'Jampack'
    }

    implementation group: 'de.dfki.mary', name: 'marytts-lang-it', version: '5.2.1', {
        exclude group: 'com.twmacinta', module: 'fast-md5'
        exclude group: 'gov.nist.math', module: 'Jampack'
    }

    implementation group: 'de.dfki.mary', name: 'marytts-lang-ru', version: '5.2.1', {
        exclude group: 'com.twmacinta', module: 'fast-md5'
        exclude group: 'gov.nist.math', module: 'Jampack'
    }

//throws groovy.lang.MissingMethodException and can't be instantiated
//    implementation group: 'de.dfki.mary', name: 'marytts-lang-lb', version: '5.2.1', {
//        exclude group: 'com.twmacinta', module: 'fast-md5'
//        exclude group: 'gov.nist.math', module: 'Jampack'
//    }

    implementation group: 'de.dfki.mary', name: 'marytts-lang-sv', version: '5.2.1', {
        exclude group: 'com.twmacinta', module: 'fast-md5'
        exclude group: 'gov.nist.math', module: 'Jampack'
    }

    implementation group: 'de.dfki.mary', name: 'marytts-lang-tr', version: '5.2.1', {
        exclude group: 'com.twmacinta', module: 'fast-md5'
        exclude group: 'gov.nist.math', module: 'Jampack'
    }

    implementation group: 'de.dfki.mary', name: 'marytts-languages', version: '5.2.1', {
        exclude group: 'com.twmacinta', module: 'fast-md5'
        exclude group: 'gov.nist.math', module: 'Jampack'
    }

    implementation group: 'de.dfki.mary', name: 'marytts-signalproc', version: '5.2.1', {
        exclude group: 'com.twmacinta', module: 'fast-md5'
        exclude group: 'gov.nist.math', module: 'Jampack'
    }

    implementation group: 'ws.schild', name: 'jave-core', version: '2.4.2'


    implementation fileTree(dir: 'lib', includes: ['*.jar'])
}

test {
    useJUnitPlatform()
}

javafx {
    version = "19"
    modules = [ 'javafx.media', 'javafx.controls' ]
}

sourceSets {
    main {
        resources {
            srcDirs = ['src/main/java', 'src/main/resources']
        }
    }
}

